plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.11.2"
    id("com.pledgecomputers.gradle.selenium") version "1.0.8"

}

group 'org.example'
version '1.0-SNAPSHOT'
description = 'gmb-t'

sourceCompatibility = JavaVersion.VERSION_17
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = "UTF-8"

def threadNumber = project.hasProperty('threadNumber') ? threadNumber.toInteger() : 1
def allureVersion = '2.24.0'
//def generatorVersion = '1.11.1-SNAPSHOT'


repositories {
    mavenCentral()
}

configurations {
    all {
        resolutionStrategy.cacheDynamicVersionsFor 4, 'seconds'
        resolutionStrategy.cacheChangingModulesFor 4, 'seconds'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

configurations {
    agent
    aspectConfig
}

ext {
    aspectjVersion = '1.9.9.1'
}

[compileJava, compileTestJava]*.options*.compilerArgs = ['-parameters']

allure {
    autoconfigure = true
    aspectjweaver = true
    version = allureVersion
    useTestNG {
        version = allureVersion
    }
}

dependencies {
    agent "org.aspectj:aspectjweaver:${aspectjVersion}"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
//    testAnnotationProcessor "ru.protei:qa.ui_steps_generator:$generatorVersion"
    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.24.0'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'junit:junit:4.13.2'

    implementation(
            'org.testng:testng:7.7.0',
            'org.projectlombok:lombok:1.18.30',
            'com.codeborne:selenide:7.0.0',
            'org.selenide:selenide-selenoid:2.3.5',
            'org.selenide:selenide-testng:1.0.0',
            'io.rest-assured:rest-assured:5.3.0',
            'org.hamcrest:hamcrest-all:1.3',

            //allure
            "io.qameta.allure:allure-testng:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",

            //test-it
            'ru.testit:testit-adapter-testng:1.2.0',
            'org.aspectj:aspectjrt:1.9.19',
            'ru.testit:testit-java-commons:1.2.0',

            //db
            'org.springframework:spring-test:5.3.18',
            'org.springframework.data:spring-data-jpa:2.6.6',
            'org.springframework.boot:spring-boot-starter-data-jpa:2.6.6',
            'org.springframework.boot:spring-boot-starter-test:2.6.6',
            'org.springframework.boot:spring-boot-starter-validation:2.6.6',
            'org.springframework.boot:spring-boot-starter-log4j2:3.0.0',
    )
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
    }
    useJUnitPlatform()

    tasks.register("testSmoke", Test) {}

    tasks.withType(Test) {
        useTestNG()
        jvmArgs("-javaagent:${configurations.agent.singleFile}")
        options {
            systemProperties(System.getProperties())
        }
    }

    tasks.named("test") {
        options {
            parallel 'methods'
            threadCount threadNumber
        }
    }

    tasks.named("testSmoke") {
        options {
            includeGroups 'smoke'
            parallel 'methods'
            threadCount threadNumber
        }
    }

}
